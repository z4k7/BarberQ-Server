"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.reviewController = exports.chatController = exports.bookingController = exports.salonController = exports.serviceController = exports.userController = exports.vendorController = exports.adminController = void 0;
const adminRepository_1 = __importDefault(require("../repository/adminRepository"));
const userRepository_1 = __importDefault(require("../repository/userRepository"));
const vendorRepository_1 = __importDefault(require("../repository/vendorRepository"));
const serviceRepository_1 = __importDefault(require("../repository/serviceRepository"));
const salonRepository_1 = __importDefault(require("../repository/salonRepository"));
const bookingRepository_1 = __importDefault(require("../repository/bookingRepository"));
const conversationRepository_1 = __importDefault(require("../repository/conversationRepository"));
const messageRepository_1 = __importDefault(require("../repository/messageRepository"));
const reviewRepository_1 = __importDefault(require("../repository/reviewRepository"));
const hashPassword_1 = __importDefault(require("./hashPassword"));
const generateOtp_1 = __importDefault(require("./generateOtp"));
const nodemailer_1 = __importDefault(require("./nodemailer"));
const jwtToken_1 = __importDefault(require("./jwtToken"));
const cloudinary_1 = __importDefault(require("./cloudinary"));
const notificationService_1 = __importDefault(require("./notificationService"));
const adminUsecase_1 = __importDefault(require("../../usecase/adminUsecase"));
const vendorUsecase_1 = __importDefault(require("../../usecase/vendorUsecase"));
const userUsecase_1 = __importDefault(require("../../usecase/userUsecase"));
const serviceUsecase_1 = __importDefault(require("../../usecase/serviceUsecase"));
const salonUsecase_1 = __importDefault(require("../../usecase/salonUsecase"));
const bookingUsecase_1 = __importDefault(require("../../usecase/bookingUsecase"));
const chatUsecase_1 = __importDefault(require("../../usecase/chatUsecase"));
const reviewUsecase_1 = __importDefault(require("../../usecase/reviewUsecase"));
const adminController_1 = __importDefault(require("../../adapter/adminController"));
const vendorController_1 = __importDefault(require("../../adapter/vendorController"));
const userController_1 = __importDefault(require("../../adapter/userController"));
const serviceController_1 = __importDefault(require("../../adapter/serviceController"));
const salonController_1 = __importDefault(require("../../adapter/salonController"));
const bookingController_1 = __importDefault(require("../../adapter/bookingController"));
const chatController_1 = __importDefault(require("../../adapter/chatController"));
const reviewController_1 = __importDefault(require("../../adapter/reviewController"));
const adminRepository = new adminRepository_1.default();
const vendorRepository = new vendorRepository_1.default();
const userRepository = new userRepository_1.default();
const serviceRepository = new serviceRepository_1.default();
const salonRepository = new salonRepository_1.default();
const bookingRepository = new bookingRepository_1.default();
const messageRepository = new messageRepository_1.default();
const conversationRepository = new conversationRepository_1.default();
const reviewRepository = new reviewRepository_1.default();
const encrypt = new hashPassword_1.default();
const genOtp = new generateOtp_1.default();
const sendOtp = new nodemailer_1.default();
const jwtToken = new jwtToken_1.default();
const cloudinary = new cloudinary_1.default();
const notificationService = new notificationService_1.default();
const adminUsecase = new adminUsecase_1.default(adminRepository, userRepository, vendorRepository, salonRepository, bookingRepository, encrypt, jwtToken);
const userUsecase = new userUsecase_1.default(userRepository, encrypt, genOtp, sendOtp, jwtToken);
const vendorUsecase = new vendorUsecase_1.default(vendorRepository, encrypt, genOtp, sendOtp, jwtToken);
const serviceUsecase = new serviceUsecase_1.default(serviceRepository);
const salonUsecase = new salonUsecase_1.default(salonRepository, bookingRepository, cloudinary);
const bookingUsecase = new bookingUsecase_1.default(bookingRepository, salonRepository, userRepository, notificationService);
const chatUsecase = new chatUsecase_1.default(conversationRepository, messageRepository);
const reviewUsecase = new reviewUsecase_1.default(reviewRepository);
exports.adminController = new adminController_1.default(adminUsecase);
exports.vendorController = new vendorController_1.default(vendorUsecase);
exports.userController = new userController_1.default(userUsecase, chatUsecase);
exports.serviceController = new serviceController_1.default(serviceUsecase);
exports.salonController = new salonController_1.default(salonUsecase, serviceUsecase);
exports.bookingController = new bookingController_1.default(bookingUsecase);
exports.chatController = new chatController_1.default(chatUsecase);
exports.reviewController = new reviewController_1.default(reviewUsecase);
